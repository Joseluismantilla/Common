- name: Installing DevOps packages and utils for working
  hosts: localhost
  become: true
  vars:
    codename: "{{ ansible_facts['distribution_release'] }}"
    osversion: "{{ ansible_facts['distribution_version'] }}"

  pre_tasks:
  - name: Updating repos (apt update)
    apt:
        update_cache: yes
  
  - name: Upgrading packages (apt upgrade)
    apt:
        upgrade: yes 
        
  - name: Installing prerrequisites
    apt:
      name: "{{ item }}"
      update_cache: yes
      state: latest
    loop:
      - software-properties-common 
      - uidmap
      - git
      - curl
      - apt-transport-https
      - wget
      - python
      - sudo
      - unzip
      - alien
      - vlc
      - tlp
      - tlp-rdw
      - ubuntu-restricted-extras
      - libavcodec-extra 
      - chrome-gnome-shell
      - unzip
      - gnome-tweak-tool
      - gnome-tweaks
  - name: Repo keys 
    apt_key:
      url: "{{ item }}"
      state: present
    loop:
      - https://dl.google.com/linux/linux_signing_key.pub
      - https://packages.microsoft.com/keys/microsoft.asc
      - https://download.docker.com/linux/ubuntu/gpg
      - https://download.teamviewer.com/download/linux/signature/TeamViewer2017.asc
  - stat:
      path: /etc/apt/sources.list.d/additional-repos.list
    register: repository

  - name: Configuring repos 
    apt_repository:
      repo: "{{ item }}"
      state: present 
      filename: additional-repos
      codename: "{{codename}}"
    loop:
      - deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
      - deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
      - ppa:ansible/ansible
      - "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{codename}}  stable"
        #- ppa:projectatomic/ppa #Podman package
      - deb http://linux.teamviewer.com/deb stable main
      - ppa:peek-developers/stable
      - "deb http://archive.canonical.com/ {{codename}} partner"
    when: not repository.stat.exists

  tasks:
  - name: Installing additional packages
    apt:
      name: "{{ item }}"
      update_cache: yes
      state: latest
      cache_valid_time: 86400
    loop:
      - peek
      - code
        #- podman
      - docker-ce
      - docker-compose
      - virtualbox-ext-pack
      - vagrant
      - google-chrome-stable
      - aws-shell
      - shellcheck
      - nodejs
      - npm
      - python-pip
      - default-jdk
      - ansible
      - puppet
      - snap
      - tilix
      - adobe-flashplugin
      - browser-plugin-freshplayer-pepperflash
    #  - teamviewer
      

  - stat:
      path: ~/.nvm
    register: nvmfolder

  - name: nvm 
    become: false
    shell: >
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
    when: not nvmfolder.stat.exists

  - name: azure cli
    shell: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

  - name: Install serverless package globally.
    npm:
      name: serverless
      global: yes

  - name: Validating chefdk
    command: dpkg -l chefdk
    register: chefdk
    ignore_errors: yes

  - name: Validating puppetdk
    command: dpkg -l pdk
    register: puppetdk
    ignore_errors: yes

  - name: DevOps tools - chefdk & puppetdk
    apt:
      deb: "{{ item }}"
    loop:
      - https://packages.chef.io/files/stable/chefdk/4.0.60/ubuntu/18.04/chefdk_4.0.60-1_amd64.deb
      - https://pm.puppet.com/cgi-bin/pdk_download.cgi?dist=ubuntu&rel=18.04&arch=amd64&ver=latest
      - https://www.mendeley.com/repositories/ubuntu/stable/amd64/mendeleydesktop-latest
      - "https://packages.microsoft.com/config/ubuntu/{{osversion}}/packages-microsoft-prod.deb"
    when: puppetdk.rc != 0 or chefdk.rc != 0

  - command: which terraform
    register: terraform
    ignore_errors: yes

  - command: which packer
    register: packer
    ignore_errors: yes
      
  - name: Downloading terraform and packer 64 bits
    become: false
    get_url:
      url: https://releases.hashicorp.com/{{item.name}}/{{ item.version }}/{{item.name}}_{{ item.version }}_linux_amd64.zip
      dest: /tmp/{{item.name}}-{{item.version}}.zip
    loop:
      - name: terraform
        version: 0.11.13
      - name: packer
        version: 1.4.0
    #when: "'64' in ansible_architecture and 'Linux' == ansible_system"
    when: packer.rc == 1 or terraform.rc == 1
    notify:
    - Unarchive hashicorp archive
    
  - name: Scripts tab completions
    become: false
    git:
      dest: /tmp/repo
      repo: https://github.com/Joseluismantilla/Common.git 
      force: no 
      clone: yes
  
  - stat:
      path: /tmp/repo/bash_completion
    register: gitrepo

  - name: Installing Pulumi
    become: false
    shell: |
      curl -fsSL https://get.pulumi.com | sh
      ~/.pulumi/bin/pulumi gen-completion bash > /tmp/repo/bash_completion/pulumi-completion.bash
    when: not gitrepo.stat.exists
    notify:
      - Copying scripts    

  handlers:
  - name: Unarchive hashicorp archive
    unarchive:
      src: "/tmp/{{item.name}}-{{item.version}}.zip"
      dest: /usr/local/bin/
      copy: no
    loop:
      - name: terraform
        version: 0.11.13
      - name: packer
        version: 1.4.0

  - name: Copying scripts
    copy:
        dest: /etc/bash_completion.d/
        src: "/tmp/repo/bash_completion/"

  - name: Update and upgrade apt packages
    become: true
    apt:
      upgrade: yes
      update_cache: yes
  
   # This section requires Ansible 1.8
    post_tasks:
    - name: Snap applications
      snap:
        name:
        - skype
        - slack
        - spotify
        classic: yes
        state: present
